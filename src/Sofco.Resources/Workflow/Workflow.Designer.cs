//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sofco.Resources.Workflow {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Workflow {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Workflow() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sofco.Resources.Workflow.Workflow", typeof(Workflow).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.actualStateIsRequired.
        /// </summary>
        public static string ActualStateIsRequired {
            get {
                return ResourceManager.GetString("ActualStateIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.actualStateNotFound.
        /// </summary>
        public static string ActualStateNotFound {
            get {
                return ResourceManager.GetString("ActualStateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.addSuccess.
        /// </summary>
        public static string AddSuccess {
            get {
                return ResourceManager.GetString("AddSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.addTransitionSuccess.
        /// </summary>
        public static string AddTransitionSuccess {
            get {
                return ResourceManager.GetString("AddTransitionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.allRefundsMustHaveSameStatus.
        /// </summary>
        public static string AllRefundsMustHaveSameStatus {
            get {
                return ResourceManager.GetString("AllRefundsMustHaveSameStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.cannotDoTransition.
        /// </summary>
        public static string CannotDoTransition {
            get {
                return ResourceManager.GetString("CannotDoTransition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.commentsRequired.
        /// </summary>
        public static string CommentsRequired {
            get {
                return ResourceManager.GetString("CommentsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.currencyExchangeRequired.
        /// </summary>
        public static string CurrencyExchangeRequired {
            get {
                return ResourceManager.GetString("CurrencyExchangeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.descriptionRequired.
        /// </summary>
        public static string DescriptionRequired {
            get {
                return ResourceManager.GetString("DescriptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.entityNull.
        /// </summary>
        public static string EntityNull {
            get {
                return ResourceManager.GetString("EntityNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.nextStateIsRequired.
        /// </summary>
        public static string NextStateIsRequired {
            get {
                return ResourceManager.GetString("NextStateIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.nextStateNotFound.
        /// </summary>
        public static string NextStateNotFound {
            get {
                return ResourceManager.GetString("NextStateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.parametersNull.
        /// </summary>
        public static string ParametersNull {
            get {
                return ResourceManager.GetString("ParametersNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.stateCreated.
        /// </summary>
        public static string StateCreated {
            get {
                return ResourceManager.GetString("StateCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a admin/workflow.StateDisabled.
        /// </summary>
        public static string StateDisabled {
            get {
                return ResourceManager.GetString("StateDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a admin/workflow.StateEnabled.
        /// </summary>
        public static string StateEnabled {
            get {
                return ResourceManager.GetString("StateEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.stateNameRequired.
        /// </summary>
        public static string StateNameRequired {
            get {
                return ResourceManager.GetString("StateNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a admin/workflow.StateNotFound.
        /// </summary>
        public static string StateNotFound {
            get {
                return ResourceManager.GetString("StateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.statesEquals.
        /// </summary>
        public static string StatesEquals {
            get {
                return ResourceManager.GetString("StatesEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.stateTextButtonRequired.
        /// </summary>
        public static string StateTextButtonRequired {
            get {
                return ResourceManager.GetString("StateTextButtonRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.stateTypeRequired.
        /// </summary>
        public static string StateTypeRequired {
            get {
                return ResourceManager.GetString("StateTypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.StateUpdated.
        /// </summary>
        public static string StateUpdated {
            get {
                return ResourceManager.GetString("StateUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.transitionAlreadyExist.
        /// </summary>
        public static string TransitionAlreadyExist {
            get {
                return ResourceManager.GetString("TransitionAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.transitionDeleted.
        /// </summary>
        public static string TransitionDeleted {
            get {
                return ResourceManager.GetString("TransitionDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.transitionNotFound.
        /// </summary>
        public static string TransitionNotFound {
            get {
                return ResourceManager.GetString("TransitionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.transitionParametersNull.
        /// </summary>
        public static string TransitionParametersNull {
            get {
                return ResourceManager.GetString("TransitionParametersNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.transitionSuccess.
        /// </summary>
        public static string TransitionSuccess {
            get {
                return ResourceManager.GetString("TransitionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.typeNotFound.
        /// </summary>
        public static string TypeNotFound {
            get {
                return ResourceManager.GetString("TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.typeRequired.
        /// </summary>
        public static string TypeRequired {
            get {
                return ResourceManager.GetString("TypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.updateSuccess.
        /// </summary>
        public static string UpdateSuccess {
            get {
                return ResourceManager.GetString("UpdateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.updateTransitionSuccess.
        /// </summary>
        public static string UpdateTransitionSuccess {
            get {
                return ResourceManager.GetString("UpdateTransitionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.userHasNoAccess.
        /// </summary>
        public static string UserHasNoAccess {
            get {
                return ResourceManager.GetString("UserHasNoAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.versionRequired.
        /// </summary>
        public static string VersionRequired {
            get {
                return ResourceManager.GetString("VersionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.workflowIsRequired.
        /// </summary>
        public static string WorkflowIsRequired {
            get {
                return ResourceManager.GetString("WorkflowIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a workflow/workflow.workflowNotFound.
        /// </summary>
        public static string WorkflowNotFound {
            get {
                return ResourceManager.GetString("WorkflowNotFound", resourceCulture);
            }
        }
    }
}
